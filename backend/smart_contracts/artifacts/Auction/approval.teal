#pragma version 8
intcblock 0 1 4
bytecblock 0x617361 0x61756374696f6e5f656e64 0x70726576696f75735f626964 0x70726576696f75735f626964646572 0x636c61696d61626c655f616d6f756e74 0x6173615f616d74
txn NumAppArgs
intc_0 // 0
==
bnz main_l14
txna ApplicationArgs 0
pushbytes 0x2826b202 // "opt_into_asset(asset)void"
==
bnz main_l13
txna ApplicationArgs 0
pushbytes 0xf0aa7023 // "start_auction(uint64,uint64,axfer)void"
==
bnz main_l12
txna ApplicationArgs 0
pushbytes 0xdb7fe843 // "bid(pay)void"
==
bnz main_l11
txna ApplicationArgs 0
pushbytes 0xe654625b // "claim_bids()void"
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0x1ec12bef // "claim_asset(asset)void"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0x24378d3c // "delete()void"
==
bnz main_l8
err
main_l8:
txn OnCompletion
pushint 5 // DeleteApplication
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub deletecaster_14
intc_1 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub claimassetcaster_13
intc_1 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub claimbidscaster_12
intc_1 // 1
return
main_l11:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub bidcaster_11
intc_1 // 1
return
main_l12:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub startauctioncaster_10
intc_1 // 1
return
main_l13:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub optintoassetcaster_9
intc_1 // 1
return
main_l14:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l18
txn OnCompletion
intc_1 // OptIn
==
bnz main_l17
err
main_l17:
txn ApplicationID
intc_0 // 0
!=
assert
callsub optintoapp_4
intc_1 // 1
return
main_l18:
txn ApplicationID
intc_0 // 0
==
assert
callsub create_0
intc_1 // 1
return

// create
create_0:
proto 0 0
bytec_0 // "asa"
intc_0 // 0
app_global_put
bytec 5 // "asa_amt"
intc_0 // 0
app_global_put
bytec_1 // "auction_end"
intc_0 // 0
app_global_put
bytec_2 // "previous_bid"
intc_0 // 0
app_global_put
bytec_3 // "previous_bidder"
pushbytes 0x // ""
app_global_put
retsub

// opt_into_asset
optintoasset_1:
proto 1 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
bytec_0 // "asa"
app_global_get
intc_0 // 0
==
assert
bytec_0 // "asa"
frame_dig -1
txnas Assets
app_global_put
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
global CurrentApplicationAddress
itxn_field AssetReceiver
frame_dig -1
txnas Assets
itxn_field XferAsset
intc_0 // 0
itxn_field AssetAmount
itxn_submit
retsub

// start_auction
startauction_2:
proto 3 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
bytec_1 // "auction_end"
app_global_get
intc_0 // 0
==
assert
frame_dig -1
gtxns AssetReceiver
global CurrentApplicationAddress
==
assert
frame_dig -1
gtxns XferAsset
bytec_0 // "asa"
app_global_get
==
assert
bytec 5 // "asa_amt"
frame_dig -1
gtxns AssetAmount
app_global_put
bytec_1 // "auction_end"
global LatestTimestamp
frame_dig -2
+
app_global_put
bytec_2 // "previous_bid"
frame_dig -3
app_global_put
retsub

// pay
pay_3:
proto 2 0
itxn_begin
intc_1 // pay
itxn_field TypeEnum
frame_dig -2
itxn_field Receiver
frame_dig -1
itxn_field Amount
intc_0 // 0
itxn_field Fee
itxn_submit
retsub

// opt_into_app
optintoapp_4:
proto 0 0
txn Sender
bytec 4 // "claimable_amount"
intc_0 // 0
app_local_put
retsub

// bid
bid_5:
proto 1 0
global LatestTimestamp
bytec_1 // "auction_end"
app_global_get
<
assert
frame_dig -1
gtxns Amount
bytec_2 // "previous_bid"
app_global_get
>
assert
frame_dig -1
gtxns Sender
txn Sender
==
assert
frame_dig -1
gtxns Receiver
global CurrentApplicationAddress
==
assert
txn Sender
bytec 4 // "claimable_amount"
txn Sender
bytec 4 // "claimable_amount"
app_local_get
frame_dig -1
gtxns Amount
+
app_local_put
bytec_2 // "previous_bid"
frame_dig -1
gtxns Amount
app_global_put
bytec_3 // "previous_bidder"
frame_dig -1
gtxns Sender
app_global_put
retsub

// claim_bids
claimbids_6:
proto 0 0
txn Sender
bytec_3 // "previous_bidder"
app_global_get
==
bnz claimbids_6_l2
txn Sender
txn Sender
bytec 4 // "claimable_amount"
app_local_get
callsub pay_3
b claimbids_6_l3
claimbids_6_l2:
txn Sender
txn Sender
bytec 4 // "claimable_amount"
app_local_get
bytec_2 // "previous_bid"
app_global_get
-
callsub pay_3
claimbids_6_l3:
retsub

// claim_asset
claimasset_7:
proto 1 0
global LatestTimestamp
bytec_1 // "auction_end"
app_global_get
>
assert
itxn_begin
intc_2 // axfer
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
bytec_0 // "asa"
app_global_get
itxn_field XferAsset
bytec 5 // "asa_amt"
app_global_get
itxn_field AssetAmount
bytec_3 // "previous_bidder"
app_global_get
itxn_field AssetReceiver
bytec_3 // "previous_bidder"
app_global_get
itxn_field AssetCloseTo
itxn_submit
retsub

// delete
delete_8:
proto 0 0
itxn_begin
intc_1 // pay
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
global CreatorAddress
itxn_field Receiver
global CreatorAddress
itxn_field CloseRemainderTo
intc_0 // 0
itxn_field Amount
itxn_submit
retsub

// opt_into_asset_caster
optintoassetcaster_9:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
frame_dig 0
callsub optintoasset_1
retsub

// start_auction_caster
startauctioncaster_10:
proto 0 0
intc_0 // 0
dupn 2
txna ApplicationArgs 1
btoi
frame_bury 0
txna ApplicationArgs 2
btoi
frame_bury 1
txn GroupIndex
intc_1 // 1
-
frame_bury 2
frame_dig 2
gtxns TypeEnum
intc_2 // axfer
==
assert
frame_dig 0
frame_dig 1
frame_dig 2
callsub startauction_2
retsub

// bid_caster
bidcaster_11:
proto 0 0
intc_0 // 0
txn GroupIndex
intc_1 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_1 // pay
==
assert
frame_dig 0
callsub bid_5
retsub

// claim_bids_caster
claimbidscaster_12:
proto 0 0
callsub claimbids_6
retsub

// claim_asset_caster
claimassetcaster_13:
proto 0 0
intc_0 // 0
txna ApplicationArgs 1
intc_0 // 0
getbyte
frame_bury 0
frame_dig 0
callsub claimasset_7
retsub

// delete_caster
deletecaster_14:
proto 0 0
callsub delete_8
retsub